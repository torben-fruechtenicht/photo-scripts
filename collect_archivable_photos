#! /usr/bin/env bash

set -eu

declare -r BASE_DIR="$(dirname "$(readlink -e "$0")")"

source "$BASE_DIR/lib/photofiles.sh"
source "$BASE_DIR/apps/lib/find_globs_factory.sh"

# callers pass in year, month, album, day. if a param is not given, wildcards will be used
# app uses full set of params depending on user input
# command does not use any of the params but just uses a more specific search dir, e.g. restricted to a year

while getopts "y:m:a:" opt; do
    case $opt in
        a ) declare -r ALBUM=$OPTARG;;
        y ) declare -r YEAR=$OPTARG;;
        m ) 
            # MONTH must be an int value (1-12), zero-padding will be taken care of here
            declare -r MONTH=$OPTARG;;
	esac
done

test -v ALBUM || declare -r ALBUM=""
test -v YEAR || declare -r YEAR=""
test -v MONTH || declare -r MONTH=""

shift $(expr $OPTIND - 1 )

declare -r SEARCH_DIR=$(readlink -e $1)

year_dir_glob=$(year_glob $YEAR)
album_sanitized=$(tr ' ' '-' <<<"$ALBUM")
album_dir_glob=$(album_glob "$album_sanitized")
dayofmonth=""
day_dir_glob=$(date_path_glob "$YEAR" "$MONTH" "$dayofmonth")
title=""
timeofday=""
number=""
filename_glob="$(filename_glob "$title" "$YEAR" "$MONTH" "$dayofmonth" "$timeofday" "$number")"

# search all output files, i.e. jpgs from the converted dirs        
find "$SEARCH_DIR" \
    -regextype posix-extended -type f \
    -ipath "*/$year_dir_glob/$album_dir_glob/$day_dir_glob/converted/$filename_glob.jpg" |\
# get fullnames for all processed files (and make sure we have no duplicates after variants reduction)
while read -r processed_file; do
    photo_filename=$(basename "$processed_file")
    sed -r 's/(.+_[0-9a-zA-Z]+)-[0-9]+$/\1/' <<<"$(echo ${photo_filename%%.*})"
done | sort -u | \
# collect original files
while read -r fullname; do
    find "$SEARCH_DIR" -regextype posix-extended -type f \
        -iregex ".+/$fullname\.(ORF|RAW|JPG|CRW|CR2)$" ! -path '*/converted/*'
done | sort -u
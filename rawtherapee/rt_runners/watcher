#! /usr/bin/env bash

set -u

declare -r APP_DIR=$(readlink -m "$HOME/.local/share/photo-scripts/")
declare -r BASEDIR="$(dirname "$(readlink -e "$0")")/../../"

export PATH="$(dirname $(readlink -f $0)):$PATH"

declare -r LOCK_FILE="$APP_DIR/rawtherapee_output_watcher.lock"

cleanup() {
    test -e "$LOCK_FILE" && rm $LOCK_FILE

    # inotifywait with "-monitor" will not exit if this script is killed so it has to be killed seperately
    pkill -f "inotifywait --monitor.*$WATCH_DIR.*"
}
trap cleanup EXIT

declare -r WATCH_DIR="$(readlink -f $1)"
if [[ -z $WATCH_DIR ]]; then
	echo "[ERROR] Watched directory does not exist" >&2
	exit 1
fi

if [[ -f $LOCK_FILE ]]; then
    echo "[WARN] Old lock file $LOCK_FILE exists, will try to kill old instance" >&2
    other_instance=$(cat $LOCK_FILE)
    kill $other_instance
    # wait 2 secs so we have a chance to write into our own LOCK_FILE and not have it deleted by the other instance (when that one tries to remove it on exit)
    sleep 2
fi
echo "$$" > $LOCK_FILE

echo "[INFO] Starting to watch $WATCH_DIR for new files..." >&2
inotifywait --monitor --recursive --quiet --event create --format %w%f $WATCH_DIR | while read new_file; do
    echo "[INFO] Received 'create' event for $new_file" >&2
    sleep 2
    test -e "$new_file" || continue
    fix_iptc_of_variants "$new_file" 
done

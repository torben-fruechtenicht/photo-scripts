#! /usr/bin/env bash

set -eu

declare -r APP_DIR=$(readlink -m "$HOME/.local/share/photo-scripts/")

export PATH="$(dirname $(readlink -f $0)):$APP_DIR:$PATH"

declare -r WATCH_DIR=$1

function kill_watcher() {
    # FIXME use the lock file, contains the pid
    kill $WATCHER_PID
}
trap kill_watcher EXIT

echo "$(date) Starting RawTherapee with watched output directories" >> "$APP_DIR/rawtherapee.log"

watcher "$WATCH_DIR" >> "$APP_DIR/rawtherapee_output_watcher.log" 2>&1 & 
declare -r WATCHER_PID=$!

# FIXME check if watcher exited with error, don't start rt in that case
#   TBD maybe use wait command for that? 
#       1. start rawtherapee async, too + save its pid
#       2. after starting rawtherapee, use "wait $WATCHER_PID || wait $RT_PID". Expected behavior: first wait
#           will wait until watcher exits. If  that happens, check the rc. if bad rc, exit rt, too.
#           => this will very probably not work this way (because of the ||) but still worth it to think about it

# NOTE script will wait until rawtherapee ends and then our EXIT trap will take care of cleaning up (incl. killing
# the watcher)
rawtherapee >> "$APP_DIR/rawtherapee.log" 2>&1
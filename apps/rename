#! /usr/bin/env bash

set -u

declare -r -x APP_TITLE="Rename photos"

declare -r BASE_DIR="$(dirname "$(readlink -e "$0")")/.."

declare -r SELECTOR="$BASE_DIR/apps/selector"
declare -r MOVE_PHOTOS="$BASE_DIR/lib/move_photos.sh"
source "$BASE_DIR/apps/lib/yad.sh"
source "$BASE_DIR/apps/lib/form_values.sh"
source "$BASE_DIR/apps/lib/notification.sh"

declare -r SEARCH_DIR=$(readlink -e "${1+$1}")
shift 1


photos=$("$SELECTOR" "$SEARCH_DIR")
if [[ -z $photos ]]; then
    notify_warning "$APP_TITLE" "No matching photos found"
    exit 1
fi   

rename_params=$(run_yad_selector_result_action_dialog "$APP_TITLE" "$photos" "$SEARCH_DIR" "" \
    --form \
    --field="Change photo title(s) to:CBE" "$(get_memorized_values_or_default "$MEMORIZED_FORM_VALUES_FILE" "title" "")")
yad_rc=$?
if [[ $yad_rc = 252 ]] || [[ $yad_rc = 1 ]]; then
    exit
fi

declare -r NEW_TITLE=$(echo "$rename_params" | cut -d'|' -f 1 | tr ' ' '-')
if [[ -z $NEW_TITLE ]]; then    
    notify_warning "$APP_TITLE" "New photo title is required"  
    exit 1
fi
memorize_form_combobox_values "$MEMORIZED_FORM_VALUES_FILE" "title" "$NEW_TITLE" 25

"$MOVE_PHOTOS" -r "$NEW_TITLE" -m "p" $photos
move_photos_rc=$?
if [[ $move_photos_rc = 0 ]]; then
    notify_info "$APP_TITLE" "Changing title of $(echo "$photos" | wc -l) photo(s) to \"$NEW_TITLE\" done"
else
    notify_error "$APP_TITLE" \
        "Changing title of $(echo "$photos" | wc -l) photo(s) to \"$NEW_TITLE\" failed with return code $move_photos_rc"
    exit 1
fi
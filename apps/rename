#! /usr/bin/env bash

set -u

declare -r -x APP_TITLE="Rename photos"

declare -r BASE_DIR="$(dirname "$(readlink -e "$0")")/.."

source "$BASE_DIR/lib/strings.sh"
source "$BASE_DIR/apps/lib/yad.sh"
source "$BASE_DIR/apps/lib/yad_form_values.sh"
source "$BASE_DIR/apps/lib/notification.sh"

PATH="$BASE_DIR:$BASE_DIR/apps:$PATH"

declare -r SEARCH_DIR=$(readlink -e "${1+$1}")
shift 1


photos=$(selector "$SEARCH_DIR")
selector_rc=$? 
if [[ $selector_rc == 101 ]]; then
    exit
elif [[ -z $photos ]]; then
    notify_warning "$APP_TITLE" "No matching photos found"
    exit 1
fi   

title_field_values=$(remember_list "title" "gnl")
rename_params=$(run_yad_selector_result_action_dialog "$APP_TITLE" "$photos" "$SEARCH_DIR" "" \
    --form \
    --field="Change photo title(s) to:CBE" "$title_field_values")
yad_rc=$?
if [[ $yad_rc = 252 ]] || [[ $yad_rc = 1 ]]; then
    exit
fi

declare -r NEW_TITLE=$(trim_whitespace "$(get_option_at_index "$rename_params" 1)")
if [[ -z $NEW_TITLE ]]; then    
    notify_warning "$APP_TITLE" "New photo title is required"  
    exit 1
fi
memorize_form_combobox_values "$MEMORIZED_FORM_VALUES_FILE" "title" "$NEW_TITLE" 25

set_title "$NEW_TITLE" $photos
set_title_rc=$?
if [[ $set_title_rc = 0 ]]; then
    notify_info "$APP_TITLE" "Changing title of $(echo "$photos" | wc -l) photo(s) to \"$NEW_TITLE\" done"
else
    notify_error "$APP_TITLE" \
        "Changing title of $(echo "$photos" | wc -l) photo(s) to \"$NEW_TITLE\" failed with return code $set_title_rc"
    exit 1
fi
#! /usr/bin/env bash

set -u

declare -r -x APP_TITLE="Rename photos"

declare -r BASE_DIR="$(dirname "$(readlink -e "$0")")/.."

source "$BASE_DIR/utils/yad_old_values.sh"
declare -r SELECTOR="$BASE_DIR/apps/selector"
declare -r YAD_CMD="$BASE_DIR/utils/yad"
declare -r POPUP_CMD="$BASE_DIR/utils/notification"
declare -r MOVE_PHOTOS="$BASE_DIR/lib/move_photos.sh"
source "$BASE_DIR/utils/yad.sh"

declare -r SEARCH_DIR=$(readlink -e "${1+$1}")
shift 1

declare OLD_VALUES_FILE="$(get_old_values_file "selector")"


photos=$("$SELECTOR" "$SEARCH_DIR")
if [[ -z $photos ]]; then
    "$POPUP_CMD" -w "$APP_TITLE" "No matching photos found"
    exit 1
fi   

rename_params=$(run_yad_selector_result_action_dialog "$APP_TITLE" "$photos" "$SEARCH_DIR" "" \
    --form \
    --field="Change photo title(s) to :CBE" "$(old_values_or_default "$OLD_VALUES_FILE" "title" "")")
yad_rc=$?
if [[ $yad_rc = 252 ]] || [[ $yad_rc = 1 ]]; then
    exit
fi

declare -r NEW_NAME=$(echo "$rename_params" | cut -d'|' -f 1 | tr ' ' '-')
if [[ -z $NEW_NAME ]]; then    
    "$POPUP_CMD" -e "$APP_TITLE" "New photo name is required"  
    exit 1
fi

"$MOVE_PHOTOS" -r "$NEW_NAME" -m "p" $photos
move_photos_rc=$?
if [[ $move_photos_rc = 0 ]]; then
    "$POPUP_CMD" -i "$APP_TITLE" "Renaming $(echo "$photos" | wc -l) photos to \"$NEW_NAME\" done"
else
    "$POPUP_CMD" -e "$APP_TITLE" \
        "Renaming $(echo "$photos" | wc -l) photos to \"$NEW_NAME\" failed with return code $move_photos_rc"
    exit 1
fi
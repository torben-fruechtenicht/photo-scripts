#! /usr/bin/env bash

set -u

declare -r APP_TITLE="Archive processed photos"

declare -r BASE_DIR="$(dirname "$(readlink -e "$0")")/.."

source "$BASE_DIR/lib/metadata.sh"
source "$BASE_DIR/apps/lib/yad.sh"
source "$BASE_DIR/apps/lib/form_values.sh"
source "$BASE_DIR/apps/lib/notification.sh"

PATH="$BASE_DIR:$PATH"


declare -r SEARCH_DIR=$(readlink -e "${1+$1}")
if [[ -z $SEARCH_DIR ]]; then
    notify_error "$APP_TITLE" "No search directory given or not-existent"
    exit 1
fi

declare -r ARCHIVE_DIR=$(readlink -e "${2+$2}")
if [[ -z $ARCHIVE_DIR ]]; then
    notify_error "$APP_TITLE" "No archive directory given or not-existent"
    exit 1
fi

dialog_text="Select which photos to archive:"
album_values="$(get_memorized_values_or_default "$MEMORIZED_FORM_VALUES_FILE" "album" "")"
year_values="$(get_memorized_values_or_default "$MEMORIZED_FORM_VALUES_FILE" "year" "$(date +%Y)")"
month_values="$(get_memorized_value_preselected_in_all_values_list "$MEMORIZED_FORM_VALUES_FILE" "month" "^!$MONTHS")"

options_string=$(run_yad "$APP_TITLE" "$dialog_text" \
    --form \
    --field="Album:CBE" "$album_values" \
    --field="Year:CBE" "$year_values" \
    --field="Month:CB" "$month_values" )
yad_rc=$?
if [[ $yad_rc = 252 ]] || [[ $yad_rc = 1 ]]; then
    exit
fi

declare -r ALBUM=$(cut -d'|' -f 1 <<<"$options_string")
declare -r YEAR=$(cut -d'|' -f 2 <<<"$options_string")
declare -r MONTH=$(cut -d'|' -f 3 <<<"$options_string")

memorize_form_combobox_values "$MEMORIZED_FORM_VALUES_FILE" "album" "$ALBUM" 5
memorize_form_combobox_values "$MEMORIZED_FORM_VALUES_FILE" "year" "$YEAR" 5
memorize_form_value "$MEMORIZED_FORM_VALUES_FILE" "month" "$MONTH"

#FIXME MONTH must be translated to number
# - we don't need it zero-padded, collect_archivable_photos can take care of that
archivable_photos=$(collect_archivable_photos \
    ${ALBUM:+-a "$ALBUM"} ${YEAR:+-a "$YEAR"} ${MONTH:+-a "$MONTH"} "$SEARCH_DIR")

if [[ -z $archivable_photos ]]; then
    notify_warning "$APP_TITLE" "No archivable photos found that match the filter"
    exit 1
fi

run_yad_selector_result_action_dialog "$APP_TITLE" \
    "$archivable_photos" "$SEARCH_DIR" "Archive the selected photos?"
yad_rc=$?
if [[ $yad_rc = 252 ]] || [[ $yad_rc = 1 ]]; then
    exit
fi

archive_photos "$ARCHIVE_DIR" <<<"$archivable_photos"
archive_photos=$?
if [[ $archive_photos = 0 ]]; then
    notify_info "$APP_TITLE" "Archived $(wc -l <<<"$archivable_photos") photo(s) to \"$ARCHIVE_DIR\""
else
    notify_error "$APP_TITLE" \
        "Archiving $(wc -l <<<"$archivable_photos") photo(s) to \"$ARCHIVE_DIR\" failed with return code $archive_photos"
    exit 1
fi
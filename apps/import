#! /usr/bin/env bash

set -u

declare -r APP_TITLE="Import photos"

declare -r BASE_DIR="$(dirname "$(readlink -e "$0")")/.."

source "$BASE_DIR/lib/strings.sh"
source "$BASE_DIR/apps/lib/yad.sh"
source "$BASE_DIR/apps/lib/yad_form_values.sh"
source "$BASE_DIR/apps/lib/notification.sh"

PATH="$BASE_DIR:$BASE_DIR/rawtherapee/profile-builder:$BASE_DIR/import:$PATH"


print_duration() {
    local m s
    ((m=${SECONDS}/60))
    ((s=${SECONDS}%60))
    if [[ $m != 0 ]]; then
        echo "$m minutes $s seconds"
    else 
        echo "$s seconds"
    fi
}

count_lines() {
    if [[ -z $1 ]]; then
        echo 0
    else
        wc -l <<<"$1"
    fi
}

augment_user_keywords() {
    local keywords=$1

    if [[ -v ALBUM_AS_KEYWORD ]] && ! [[ $ALBUM = $DEFAULT_ALBUM_VALUE ]]; then
        keywords="${keywords:+$keywords;}$ALBUM"
    fi

    if [[ -v TITLE_AS_KEYWORD ]] && [[ -n $TITLE ]] && [[ $ALBUM != $TITLE ]]; then
        keywords="${keywords:+$keywords;}$TITLE"
    fi

    echo "$keywords"
}



while getopts "c:" opt; do
    case $opt in
        c ) 
			declare -r CREATOR_OPTION=$OPTARG;;
	esac
done
shift $(expr $OPTIND - 1 )


declare -r DCIM_DIR=${1+$1}
declare -r TARGET_DIR=${2+$2}

declare -r DEFAULT_ALBUM_VALUE="New photos"
declare -r DEFAULT_TITLE_VALUE=""

dialog_txt="Import photos from $DCIM_DIR to $TARGET_DIR"

album_cb_values=$(remember_list "album" "gn" "$DEFAULT_ALBUM_VALUE")
if [[ -z $album_cb_values ]]; then
    album_cb_values=$DEFAULT_ALBUM_VALUE
fi
title_cb_values=$(remember_list "title" "gn" "$DEFAULT_TITLE_VALUE")
if [[ -z $title_cb_values ]]; then
    title_cb_values=$DEFAULT_TITLE_VALUE
fi    
keywords_cb_values=$(remember_list "keywords" "gn")
creator_cb_values=$(remember_list "creator" "gn" "${CREATOR_OPTION+$CREATOR_OPTION}")

options_string=$(run_yad "$APP_TITLE" "$dialog_txt" \
    --form \
    --field="Album:CBE" "$album_cb_values" \
    --field="Add album name as a keyword:CHK" "TRUE" \
    --field="Photo title:CBE" "$title_cb_values" \
    --field="Add title as a keyword:CHK" "TRUE" \
    --field="Photographer/creator:CBE" "$creator_cb_values" \
    --field="Keywords (separated by \";\"):CBE" "$keywords_cb_values" \
    --field="Description:TXT" "" \
    --field="File types:CB" "^raw!jpeg!raw+jpeg")
yad_rc=$?
if [[ $yad_rc = 252 ]] || [[ $yad_rc = 1 ]]; then
    exit
fi

album_string=$(trim_whitespace "$(get_option_at_index "$options_string" 1)")
if [[ -n $album_string ]]; then
    declare -r ALBUM=$album_string
    is_option_selected "$options_string" 2 && declare -r ALBUM_AS_KEYWORD=
    memorize_form_combobox_values "$MEMORIZED_FORM_VALUES_FILE" "album" "$ALBUM" 25
else 
    declare -r ALBUM="New photos"
fi

title_string=$(trim_whitespace "$(get_option_at_index "$options_string" 3)")
if [[ -n $title_string ]]; then
    declare -r TITLE="$title_string"
    is_option_selected "$options_string" 4 && declare -r TITLE_AS_KEYWORD=
    memorize_form_combobox_values "$MEMORIZED_FORM_VALUES_FILE" "title" "$TITLE" 25
fi

creator_string=$(trim_whitespace "$(get_option_at_index "$options_string" 5)")
if [[ -n $creator_string ]]; then
    declare -r CREATOR=$creator_string 
    memorize_form_combobox_values "$MEMORIZED_FORM_VALUES_FILE" "creator" "$CREATOR" 10
fi

keywords_string=$(trim_whitespace "$(get_option_at_index "$options_string" 6)")
if [[ -n "$keywords_string" ]]; then
    declare -r USER_KEYWORDS=$keywords_string
    memorize_form_combobox_values "$MEMORIZED_FORM_VALUES_FILE" "keywords" "$USER_KEYWORDS" 25
fi

declare -r KEYWORDS=$(augment_user_keywords "${USER_KEYWORDS-}")
declare -r DESCRIPTION=$(get_option_at_index "$options_string" 7)
declare -r FILETYPES=$(get_option_at_index "$options_string" 8)


set -x
imported_photos=$(import_photos ${ALBUM+-a "$ALBUM"} ${TITLE+-t "$TITLE"} ${FILETYPES+-y "$FILETYPES"} "$DCIM_DIR" "$TARGET_DIR")
import_photos_rc=$?
if [[ $import_photos_rc = 0 ]]; then
    imported_photos_count=$(count_lines "$imported_photos")
    notify_info "$APP_TITLE" "Imported $imported_photos_count photo(s)"
else
    notify_error "$APP_TITLE" "Importing photos from $DCIM_DIR failed with return code $import_photos_rc"
    exit 1
fi


write_metadata -o ${CREATOR+-c "$CREATOR"} ${KEYWORDS:+-k "$KEYWORDS"} ${DESCRIPTION:+-d "$DESCRIPTION"} "$imported_photos"
write_metadata_rc=$?
if [[ $write_metadata_rc = 0 ]]; then
    notify_info "$APP_TITLE" "Wrote initial metadata"
else
    notify_error "$APP_TITLE" "Writing initial metadata failed with return code $write_metadata_rc"
    exit 1
fi


notify_info "$APP_TITLE" "Import done ($imported_photos_count photo(s), took $(print_duration)."
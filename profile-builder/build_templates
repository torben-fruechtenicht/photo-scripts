#! /usr/bin/env bash

set -ue

declare -r SELF=$(readlink -e "$0")
declare -r MELD_BASELINE=$(dirname "$SELF")/meld_baseline.sh

while getopts "ov" opt; do
    case $opt in
        o ) 
            declare -r OVERWRITE=;;
        v ) 
            declare -r VERBOSE=;;
    esac
done
shift $(($OPTIND - 1))


declare -r INPUT_PROFILE=$(readlink -e "$1")
if [[ -z "$INPUT_PROFILE" ]]; then
    echo "[ERROR] Missing input profile" >&2
    exit 1
fi
test -v VERBOSE && echo "[INPUT PROFILE] $INPUT_PROFILE" >&2

declare -r TARGET_DIR=$(readlink -f "$2")
if ! [[ -e $TARGET_DIR ]]; then
    test -v VERBOSE && echo "[INFO] Creating missing target directory $2" >&2
    mkdir "$TARGET_DIR"
fi
test -v VERBOSE && echo "[TARGET DIRECTORY] $TARGET_DIR" >&2


if [[ $# = 3 ]] && [[ -d $3 ]]; then
    root_baselines_dir=$(readlink -e "$3")
    # TBD use xargs to have a proper string? do we need it?
    declare -r BASELINES=$(find "$root_baselines_dir" -mindepth 1 -maxdepth 1 -type f -regex '.*baseline\(..*\)?.pp3')
else
    shift 2
    declare -r BASELINES=$@
fi
# echo "[BASELINES] $BASELINES" >&2


phototype_from_baseline() {
    local -r baseline=$1
    local -r photo_type=$(echo "$baseline" | sed -rn 's/.+\.([a-z]{3}).pp3/\1/p')
    if ! [[ $photo_type == "pp3" ]]; then 
        echo "$photo_type"
    fi
}

has_sibling_of_type() {
    local -r baseline=$1
    local -r photo_type=$2
    test -e ${baseline/\.pp3/.${photo_type}.pp3}
}


for baseline in "$BASELINES"; do
    baseline_filename=$(basename "$baseline")
    test -v VERBOSE && echo "[BASELINE] $baseline" >&2
    target_profile=$TARGET_DIR/${baseline_filename/baseline/template}
    test -v VERBOSE && echo "[TARGET] $target_profile" >&2

    if [[ -v OVERWRITE ]] || ! [[ -e $target_profile ]]; then
        cp "$INPUT_PROFILE" "$target_profile"
        $MELD_BASELINE ${VERBOSE+-v} "$baseline" "$target_profile"
        test -v VERBOSE || echo $target_profile
    else 
        echo "[WARN] Target profile $target_profile exists" >&2
    fi

    photo_type=$(phototype_from_baseline "$baseline")
    find "$(dirname "$baseline")" -mindepth 2 -maxdepth 2 -type f -regex '.*baseline\(..*\)?.pp3' |\
        while read -r child_baseline; do
            child_type=$(phototype_from_baseline "$child_baseline")
            if ([[ -z $photo_type ]] && [[ -z $child_type ]]) || \
                ([[ -z $photo_type ]] && [[ -n $child_type ]] && ! has_sibling_of_type "$baseline" "$child_type") || \
                ([[ -n $photo_type ]] && [[ -n $child_type ]] && [[ $photo_type == $child_type ]]); then
                next_working_dir=$(dirname "$child_baseline")
                next_target_directory="$TARGET_DIR/${next_working_dir##*/}"
                $SELF ${OVERWRITE+-o} ${VERBOSE+-v} "$target_profile" "$next_target_directory" "$child_baseline"
            fi
        done  
done

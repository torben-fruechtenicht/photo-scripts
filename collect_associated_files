#! /usr/bin/env bash

set -eu
shopt -s nocasematch

declare -r BASE_DIR="$(dirname "$(readlink -e "$0")")"
source "$BASE_DIR/lib/photofiles.sh"

PATH="$BASE_DIR/lib:$PATH"

if (( $# == 0 )); then
    declare -r READ_PHOTOS_FROM_STDIN=
else 
    declare -r PHOTOS=$@
fi


find_associated_files_by_fullname() {
    local -r photo=$1
    local -r photo_filename=$(basename "$photo")
    local -r sourcephoto_fullname=${photo_filename%%.*}
    # Find all files, i.e. actual photo file and all associated files: search for the basename without
    # extensions in the directory of $photo and below. 
    find $(dirname "$photo") -type f -path "*/${sourcephoto_fullname}*"
}

# About the "sort -u" as the last pipeline step: if we have both a raw and a jpg version of a photo (i.e. there
# are two original files), we will find the jpg file as an associated file or the raw file (and vice versa). 
# this leads to problems when changing title or album (because commands will try to change things twice, failing 
# the 2nd time because the file was changed already because it was collected twice). But using "sort -u" will
# work around that quite nicely.
if [[ -v READ_PHOTOS_FROM_STDIN ]]; then
    while read -r photo; do 
        if is_original_photofile "$photo"; then
            find_associated_files_by_fullname "$(readlink -e "$photo")"
        fi
    done < /dev/stdin | sort -u
else 
    for photo in $PHOTOS; do
        if is_original_photofile "$photo"; then
            find_associated_files_by_fullname "$(readlink -e "$photo")"
        fi
    done | sort -u
fi 